import java.io.*;
import java.util.*;
public class JGG {
    public  static  void  main(String[] args) {
        Numbers _numbers = new Numbers();
        Input _input = new Input();
        _numbers.Create();
        _numbers.SetNum();
       while (_numbers.End()) {
           try {
               _input.Input();
           } catch (InputMismatchException ex) {
               System.out.println("输入有误，请重新输入");
           }
           _numbers.Display_hid(Input.ipt_n);
           _numbers.Judge();
       }
       System.out.println("游戏结束，共计选择" + Input.loop + "次");
    }
}

class Point {
    private int x,y;
    private int z = -1;
    private boolean b = false;

    Point(int x, int y) {
        this.x = x;
        this.y = y;
    }
    Point() {}

    public void setX(int x) {
        this.x = x;
    }

    public void setY(int y) {
        this.y = y;
    }

    public int getX() {
        return x;
    }

    public int getY() {
        return y;
    }

    public void setZ(int z) {
        this.z = z;
    }

    public int getZ() {
        return z;
    }

    public void setB(boolean b) {
       this.b = b;
    }

    public boolean getB() {
        return b;
    }
}

class Numbers extends Point{
    private Point[] numbers = new Point[9];
    private int[] results = new int[]{0,1,1,2,2,3,3,4,4};
    private int[] judge_n = new int[100];

    Numbers(){}

   int Random() {
        int x;
       do {
           x = (int)(Math.random() * 10);
       } while (x>8);
       return  x;
   }

   public void Create() {
        for (int i = 0; i<9; i++) {

            numbers[i] = new Point();

           switch (i % 3) {
               case 0: { numbers[i].setX(0); numbers[i].setY(2 - (i/3)); break; }
               case 1: { numbers[i].setX(1); numbers[i].setY(2 - ((i - 1)/3)); break;}
               case 2: { numbers[i].setX(2); numbers[i].setY(2 - ((i - 2)/3)); break;}
           }
        }
   }

    public void SetNum() {
        int x;
        boolean y;
        for (int i = 0; i<9; i++) {
           do {
               y = true;
               x = Random();
               switch (numbers[x].getZ()) {
                   case -1: { numbers[x].setZ(results[i]); y = false ; break;}
               }
           } while (y);
       }
    }

    public void  Display() {
        for (int i = 0; i<9; i++) {
            System.out.print(numbers[i].getZ() + " ");
            if ((i % 3) == 2) { System.out.println();}
        }
    }

    public void Display_hid(int x) {
        numbers[x-1].setB(true);
                for (int i = 0; i < 9; i++) {
                    if (numbers[i].getB()) {
                        System.out.print(numbers[i].getZ() + " ");
                    } else {
                System.out.print("*" + " ");
            }

            if ((i % 3) == 2) {
                System.out.println();
            }
        }
    }

    public void Judge() {
        judge_n[Input.loop] = Input.ipt_n - 1;
        if((Input.loop % 2) == 0) {
            if ((numbers[judge_n[Input.loop]].getZ()) == (numbers[judge_n[Input.loop-1]].getZ())) {
                System.out.println("消除成功");
            } else {
                if(numbers[judge_n[Input.loop]].getZ() != 0) {
                numbers[judge_n[Input.loop]].setB(false); }
                if(numbers[judge_n[Input.loop-1]].getZ() != 0) {
                numbers[judge_n[Input.loop-1]].setB(false); }
            }
        }
    }

    public boolean End(){
        boolean x = false;
        for (int i = 0; i<9; i++) {
            if (numbers[i].getB() == false) {x = true;}
        }
        return x;
    }
}

class Input {
    static int ipt_n;
    Scanner y = new Scanner(System.in);
    static int loop = 0;

    public void Input() {
        System.out.println("请选择1-9号卡片");
        ipt_n = y.nextInt();
        loop++;
    }
}

